{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/messages.service.ts","webpack:///./src/app/messages/messages.component.css","webpack:///./src/app/messages/messages.component.html","webpack:///./src/app/messages/messages.component.ts","webpack:///./src/app/orders.service.ts","webpack:///./src/app/orders/order.ts","webpack:///./src/app/orders/orders.component.css","webpack:///./src/app/orders/orders.component.html","webpack:///./src/app/orders/orders.component.ts","webpack:///./src/app/pizza/pizza.component.css","webpack:///./src/app/pizza/pizza.component.html","webpack:///./src/app/pizza/pizza.component.ts","webpack:///./src/app/tally.service.ts","webpack:///./src/app/topping.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"/* Application-wide Styles */\\r\\nh1 {\\r\\n  color: #369;\\r\\n  font-family: Arial, Helvetica, sans-serif;\\r\\n  font-size: 250%;\\r\\n}\\r\\nh2, h3 {\\r\\n  color: #444;\\r\\n  font-family: Arial, Helvetica, sans-serif;\\r\\n  font-weight: lighter;\\r\\n}\\r\\nbody {\\r\\n  margin: 2em;\\r\\n}\\r\\nbody, input[text], button {\\r\\n  color: #888;\\r\\n  font-family: Cambria, Georgia;\\r\\n}\\r\\n/* everywhere else */\\r\\n* {\\r\\n  font-family: Arial, Helvetica, sans-serif;\\r\\n}\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to {{ title }}!\\n  </h1>\\n  <app-pizza></app-pizza>\\n  <app-messages></app-messages>\\n  <app-orders></app-orders>\\n\\n</div>\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Greek Pizza';\n  step1 = 'Enter first name';\n  step2 = 'Select toppings';\n  step3 = 'Place order';\n  \n  errorToppingTaken1 = 'Sorry, all out of ';\n  errorToppingTaken2 = '. Please change your selections.';\n\n  \n  success = 'Pick up in 15 minutes';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { PizzaComponent } from './pizza/pizza.component';\nimport { FormsModule } from '@angular/forms'\nimport { HttpClientModule }  from '@angular/common/http';\nimport { MessagesComponent } from './messages/messages.component';\nimport { OrdersComponent } from './orders/orders.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PizzaComponent,\n    MessagesComponent,\n    OrdersComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n \n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageService {\n  messages: string[] = [];\n \n  add(message: string) {\n    this.messages.push(message);\n  }\n \n hasMessage() {\n   return this.messages.length > 0;\n }\n  displayNext() {\n    return this.messages.pop();\n  }\n  clear() {\n    this.messages = [];\n  }\n}","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"messageService.hasMessage()\\\">\\n\\n  <h2>Messages</h2>\\n  {{messageService.displayNext()}} \\n\\n</div>\\n\"","import { MessageService } from '../messages.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(public messageService: MessageService) { }\n\n  ngOnInit() {\n  }\n\n}\n","import { MessageService } from './messages.service';\nimport { Order } from './orders/order';\nimport { OrderForm } from './orders/orderform';\nimport { Topping } from './pizza/topping';\nimport { TallyService } from './tally.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdersService {\n  //A service should be stateless, but I need a way to communicate\n  //the order information across components. This is similar to messageService in that way.\n  private order: Order = new Order();\n  \n  constructor(private messageService: MessageService, private  tallyService: TallyService) { }\n  \n  public placeOrder( ) {\n    //todo create a price-calculator service that gets the \n    //total from the server\n  }\n  \n  public isOkToPlaceOrder(): boolean {\n    return this.order.isComplete();\n  }\n  \n  public getToppings(): Topping[] {\n    return this.order.getToppings();\n  }\n  \n  public addTopping(topping: Topping) {\n    this.order.addTopping(topping);\n    this.order.total = this.tallyService.getTotal(this.order);\n    \n  }\n  \n  public clearToppings(): void {\n    this.order.clearToppings();\n  }\n  \n  public isOkToShowOrder() {\n    return this.order.isIngredientsComplete();\n  }\n  \n  public updateOrder(orderForm: OrderForm) {\n    this.order.customerFirstName = orderForm.customerFirstName;\n  }\n  \n  public getOrderTotal() {\n    return this.order.total;\n  }\n}\n","import { Topping } from '../pizza/topping';\nexport class Order {\n   customerFirstName: string;\n  \n  //TODO: change toppings to an object\n  //for better flexibility of adding and removing\n  toppings: Topping[] = [];\n  total: number;\n  \n  public isComplete(): boolean {\n    return this.validate();\n  }\n  \n  public validate(): boolean {\n    return this.customerInfoCorrect() && this.isIngredientsComplete();\n  }\n   \n\n  public addTopping(topping: Topping) {\n    this.toppings.push(topping);\n  }\n  public getToppings() : Topping[] {\n    return this.toppings;\n  }\n  \n  public clearToppings() : void {\n    this.toppings = [];\n  }\n  public isIngredientsComplete() : boolean {\n    return this.toppings.length > 0;\n  }\n  \n  public customerInfoCorrect() : boolean {\n    return this.customerFirstName.length > 2;\n  }\n  \n}","module.exports = \"\"","module.exports = \"\\r\\n  \\r\\n<div  *ngIf=\\\"isOkToShowOrder()\\\">\\r\\n<P>\\r\\n<h2>Order total: ${{getOrderTotal()}}</h2>\\r\\n <P>\\r\\n <div>\\r\\n\\r\\n    <label>First name :\\r\\n       <input [(ngModel)]=\\\"orderForm.customerFirstName\\\" placeholder=\\\"customerFirstName\\\"/>\\r\\n    </label>\\r\\n    <P>\\r\\n  </div>\\r\\n</div>\\r\\n<div  *ngIf=\\\"isOkToPlaceOrder()\\\">\\r\\n     <button (click)=\\\"placeOrder()\\\">Place order</button>\\r\\n    </div>\"","import { Component, OnInit, Input, OnChanges } from '@angular/core';\nimport {OrdersService} from '../orders.service';\nimport { Topping } from '../pizza/topping';\nimport {Order} from './order';\nimport { OrderForm } from './orderform';\n@Component({\n  selector: 'app-orders',\n  templateUrl: './orders.component.html',\n  styleUrls: ['./orders.component.css']\n})\nexport class OrdersComponent implements OnInit, OnChanges {\n    orderForm : OrderForm= {customerFirstName : ''};\n    constructor(private ordersService : OrdersService) { }\n\n  ngOnInit() {\n    }\n  \n  ngOnChanges(changes) {\n    this.ordersService.updateOrder(this.orderForm);\n  }\n  \n  public isOkToShowOrder(): boolean {\n    \n    return this.ordersService.isOkToShowOrder();\n  }\n  \n  public getOrderTotal() {\n    return this.ordersService.getOrderTotal();\n  }\n  public isOkToPlaceOrder() : boolean {\n    //TODO: shouldn't have to call this here. get event listening working\n     this.ordersService.updateOrder(this.orderForm);\n  \n    return this.ordersService.isOkToPlaceOrder();\n  }\n  \n  public placeOrder(): void {\n    this.ordersService.placeOrder(); \n  }\n}\n","module.exports = \"/* toppingsComponent's private CSS styles */\\r\\n.selected {\\r\\n  background-color: #CFD8DC !important;\\r\\n  color: white;\\r\\n}\\r\\n.toppings {\\r\\n  margin: 0 0 2em 0;\\r\\n  list-style-type: none;\\r\\n  padding: 0;\\r\\n  width: 15em;\\r\\n}\\r\\n.toppings li {\\r\\n  cursor: pointer;\\r\\n  position: relative;\\r\\n  left: 0;\\r\\n  background-color: #EEE;\\r\\n  margin: .5em;\\r\\n  padding: .3em 0;\\r\\n  height: 1.6em;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n.toppings li.selected:hover {\\r\\n  background-color: #BBD8DC !important;\\r\\n  color: white;\\r\\n}\\r\\n.toppings li:hover {\\r\\n  color: #607D8B;\\r\\n  background-color: #DDD;\\r\\n  left: .1em;\\r\\n}\\r\\n.toppings .text {\\r\\n  position: relative;\\r\\n  top: -3px;\\r\\n}\\r\\n.toppings .badge {\\r\\n  display: inline-block;\\r\\n  font-size: small;\\r\\n  color: white;\\r\\n  padding: 0.8em 0.7em 0 0.7em;\\r\\n  background-color: #607D8B;\\r\\n  line-height: 1em;\\r\\n  position: relative;\\r\\n  left: -1px;\\r\\n  top: -4px;\\r\\n  height: 1.8em;\\r\\n  margin-right: .8em;\\r\\n  border-radius: 4px 0 0 4px;\\r\\n}\"","module.exports = \"\\n\\n<ul class=\\\"toppings\\\">\\n<h2>Available Toppings</h2>\\n  <li *ngFor=\\\"let topping of toppings\\\" (click)=\\\"onSelect(topping)\\\">\\n  <div *ngIf=\\\"topping.quantity > 0\\\">\\n    <span class=\\\"badge\\\">{{topping.quantity}} left</span> {{topping.name}}\\n    </div>\\n  </li>\\n</ul>\\n<div *ngIf=\\\"hasSelectedToppings()\\\">\\n\\t<button (click)=\\\"clearSelectedToppings()\\\">Clear all</button>\\n</div>\\n\\n<li *ngFor=\\\"let selectedTopping of getSelectedToppings()\\\">\\n   <div>\\n    <label>name:\\n      <input [(ngModel)]=\\\"selectedTopping.name\\\" placeholder=\\\"name\\\">\\n    </label>\\n  </div>\\n</li>\\n\\n\"","import { MessageService } from '../messages.service';\nimport {Component, OnInit} from '@angular/core';\nimport {Topping} from './topping';\nimport {MOCK_TOPPINGS_LIST} from './mocktoppingslist';\nimport {ToppingService} from '../topping.service';\nimport {OrdersService} from '../orders.service';\nimport { Observable } from 'rxjs';\n@Component({\n  selector: 'app-pizza',\n  templateUrl: './pizza.component.html',\n  styleUrls: ['./pizza.component.css']\n})\nexport class PizzaComponent implements OnInit {\n  \n  \n  constructor(private toppingService: ToppingService,\n  private messageService: MessageService, \n  private ordersService: OrdersService) {}\n  \n  private toppings : Topping[] ;\n\n  ngOnInit() {\n    this.initToppings();\n  }\n\n  initToppings(): void {\n    this.toppingService.getToppings()\n      .subscribe(t => this.toppings = t.slice());\n  }\n\n  getSelectedToppings(): Topping[] {\n    return this.ordersService.getToppings();\n  }\n  \n  hasSelectedToppings(): boolean {\n    return this.ordersService.getToppings().length > 0;\n  }\n     \n  clearSelectedToppings(): void {\n    this.ordersService.clearToppings();\n    this.initToppings();\n\n  }\n  onSelect(topping: Topping): void {\n    if (topping.quantity > 0) {\n      topping.quantity--;\n      this.ordersService.addTopping(topping)\n      this.messageService.add(\"Added \" + topping.name);\n    } else {\n      this.messageService.add(\"Sorry, we've run out of \" + topping.name);\n    }\n    \n    \n  }\n\n}\n","import { Order } from './orders/order';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TallyService {\n\n  constructor() { }\n  \n  //TODO: hit http service\n  \n  public getTotal( order: Order): number {\n    //mock func:\n    return order.toppings.length * 1.50;\n  }\n}\n","import { MessageService } from './messages.service';\nimport { Injectable } from '@angular/core';\nimport { Topping } from './pizza/topping';\nimport { MOCK_TOPPINGS_LIST } from './pizza/mocktoppingslist';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToppingService {\n\n  constructor( private http: HttpClient,\n  private messageService: MessageService) { }\n  \n  getToppings(): Observable<Topping[]> {\n   return this.http.get<Topping[]>(\"http://localhost:9633/toppings\");\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n  \n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n"],"sourceRoot":""}